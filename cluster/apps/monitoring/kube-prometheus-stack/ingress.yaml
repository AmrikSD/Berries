---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    hajimari.io/enable: "true"
    hajimari.io/icon: "weather-sunset"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    kubernetes.io/ingress.class: "traefik"
spec:
  tls:
    - hosts:
        - "prometheus.${SECRET_DOMAIN}"
      secretName: "prometheus.${SECRET_DOMAIN}"
  rules:
    - host: "prometheus.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-prometheus-stack-prometheus
                port:
                  number: 9090
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alertmanager-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    hajimari.io/enable: "true"
    hajimari.io/icon: "weather-sunset"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    kubernetes.io/ingress.class: "traefik"
spec:
  tls:
    - hosts:
        - "alertmanager.${SECRET_DOMAIN}"
      secretName: "alertmanager.${SECRET_DOMAIN}"
  rules:
    - host: "alertmanager.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-prometheus-stack-alertmanager
                port:
                  number: 9093
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    hajimari.io/enable: "true"
    hajimari.io/icon: "weather-sunset"
    traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    kubernetes.io/ingress.class: "traefik"
spec:
  tls:
    - hosts:
        - "grafana.${SECRET_DOMAIN}"
      secretName: "grafana.${SECRET_DOMAIN}"
  rules:
    - host: "grafana.${SECRET_DOMAIN}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kube-prometheus-stack-grafana
                port:
                  number: 80
